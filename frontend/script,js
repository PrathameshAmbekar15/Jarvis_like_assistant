document.addEventListener('DOMContentLoaded', () => {
    const cityInput = document.getElementById('city-input');
    const unitSelect = document.getElementById('unit-select');
    const searchBtn = document.getElementById('search-btn');
    const weatherInfo = document.getElementById('weather-info');
    const errorMessage = document.getElementById('error-message');
    
    const cityName = document.getElementById('city-name');
    const weatherIcon = document.getElementById('weather-icon');
    const temperature = document.getElementById('temperature');
    const humidity = document.getElementById('humidity');
    const windSpeed = document.getElementById('wind-speed');
    const weatherDescription = document.getElementById('weather-description');
    
    searchBtn.addEventListener('click', fetchWeather);
    cityInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') fetchWeather();
    });
    
    async function fetchWeather() {
        const city = cityInput.value.trim();
        const units = unitSelect.value;
        
        if (!city) {
            alert('Please enter a city name');
            return;
        }
        
        try {
            const response = await fetch(`http://localhost:3000/api/weather?city=${city}&units=${units}`);
            
            if (!response.ok) {
                throw new Error('City not found');
            }
            
            const data = await response.json();
            
            // Update UI
            cityName.textContent = `${data.name}, ${data.sys.country}`;
            temperature.textContent = `${Math.round(data.main.temp)}°${units === 'metric' ? 'C' : 'F'}`;
            humidity.textContent = data.main.humidity;
            windSpeed.textContent = data.wind.speed;
            weatherDescription.textContent = data.weather[0].description;
            
            // Set weather icon
            weatherIcon.src = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;
            weatherIcon.alt = data.weather[0].main;
            
            // Show weather info and hide error
            weatherInfo.classList.remove('hidden');
            errorMessage.classList.add('hidden');
            
        } catch (error) {
            console.error('Error fetching weather:', error);
            weatherInfo.classList.add('hidden');
            errorMessage.classList.remove('hidden');
        }
    }
});

// cli-weather.js
require('dotenv').config();
const axios = require('axios');
const readline = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
});

const API_KEY = process.env.OPENWEATHER_API_KEY;

async function getWeather(city, units = 'metric') {
    try {
        const response = await axios.get(
            `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${units}&appid=${API_KEY}`
        );
        
        const data = response.data;
        const tempUnit = units === 'metric' ? '°C' : '°F';
        const windUnit = units === 'metric' ? 'm/s' : 'mph';
        
        console.log(`\nWeather in ${data.name}, ${data.sys.country}:`);
        console.log(`- Temperature: ${Math.round(data.main.temp)}${tempUnit}`);
        console.log(`- Feels like: ${Math.round(data.main.feels_like)}${tempUnit}`);
        console.log(`- Humidity: ${data.main.humidity}%`);
        console.log(`- Wind: ${data.wind.speed} ${windUnit}`);
        console.log(`- Description: ${data.weather[0].description}`);
        
    } catch (error) {
        if (error.response && error.response.status === 404) {
            console.log('City not found. Please try again.');
        } else {
            console.log('Error fetching weather data:', error.message);
        }
    }
}

readline.question('Enter a city name: ', city => {
    readline.question('Choose units (metric/imperial): ', units => {
        getWeather(city, units);
        readline.close();
    });
});